local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")

-- Define links in a structured table
local links = {
    BladeBall = "https://raw.githubusercontent.com/malfume/Drowned/main/BladeBall.lua",
    AdventurePiece = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/AdventurePiece.lua",
    Test = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/Test.lua",
    LegacyPiece = "https://raw.githubusercontent.com/MrMrMalfume/Drowned/main/LegacyPieceFree",
    CrusedSea = "https://raw.githubusercontent.com/MrMrMalfume/Drowned/main/Cursedsea",
    Default = "https://raw.githubusercontent.com/MrMalfume/Kindo/main/KimaHub",
    DemonPiece = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/DemonPieceFree",
    RogueNinja = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/RogueNinja",
    WandenreichCity = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/TrialVsTypeSoul",
    SoulSociety = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/TrialVsTypeSoul",
    HuecoMundo = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/TrialVsTypeSoul",
    KarakuraTown = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/TrialVsTypeSoul",
    LasNoches = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/TrialVsTypeSoul",
    RukonDistrict = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/TrialVsTypeSoul",
    Demonfall = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/DemonfallPaid",
    ShinobiLineage = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/shino",
    Gpo = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/PaidBrGpo",
    Xl = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/Xl",
    Aba = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/Aba",
    Clover = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/Clover",
    Rival = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/Rival",
    Weakleg = "https://raw.githubusercontent.com/MrMalfume/Drowned/main/Weakleg",
}

-- Mapping game IDs to their respective scripts
local GAME_SCRIPTS = {
    [13772394625] = links.BladeBall,
    [9731516308] = links.AdventurePiece,
    [4543734972] = links.Test,
    [8501406566] = links.LegacyPiece,
    [14426444782] = links.CrusedSea,
    [6897167394] = links.DemonPiece,
    [14206055326] = links.RogueNinja,
    [14071822972] = links.WandenreichCity,
    [14070029709] = links.SoulSociety,
    [14069122388] = links.HuecoMundo,
    [14069678431] = links.KarakuraTown,
    [14069866342] = links.LasNoches,
    [14069956183] = links.RukonDistrict,
    [5094651510] = links.Demonfall,
    [4855457388] = links.Demonfall,
    [15728281327] = links.ShinobiLineage,
    [11424731604] = links.Gpo,
    [648454481] = links.Gpo,
    [1458767429] = links.Aba,
    [14839995292] = links.Clover,
    [14982280667] = links.Clover,
    [17639412521] = links.Xl,
    [17625359962] = links.Rival,
    [18337464872] = links.Weakleg,
}

-- Function to trim strings from whitespace
local function trim(s)
    return s:match("^%s*(.-)%s*$")
end

-- Function to check if the user is blacklisted
local function checkBlacklist()
    local hwid = RbxAnalyticsService:GetClientId()
    local response = HttpService:GetAsync("https://pastebin.com/raw/QKActydZ")
    local hwids = string.split(response, "\n")

    for _, id in ipairs(hwids) do
        if hwid == trim(id) then
            Players.LocalPlayer:Kick("You are blacklisted. HWID: " .. hwid)
            return true
        end
    end
    return false
end

-- Function to load a game script from a URL
local function loadGameScript(link)
    local success, scriptOrError = pcall(function()
        local script = loadstring(HttpService:GetAsync(link))
        assert(type(script) == "function", "Script at " .. link .. " is not a function")
        return script
    end)

    if not success then
        warn("Failed to load game script:", scriptOrError)
    end
    return success, scriptOrError
end

-- Function to handle player messages and check for banned words
local bannedWords = {
    "clipped", "hacker", "cheating", -- Add more banned words here
}

local function handlePlayerMessage(player, msg)
    for _, word in ipairs(bannedWords) do
        if msg:lower():find(word) then
            -- Replace the following with your function to log or handle banned words
            print("Banned word detected:", word, "from player", player.Name)
            player:Kick("You have been logged for going against TOS.")
            break
        end
    end
end

-- Setup player event connections
local function initPlayerConnections(player)
    player.Chatted:Connect(function(msg)
        handlePlayerMessage(player, msg)
    end)
end

-- Main execution block
if not checkBlacklist() then
    Players.PlayerAdded:Connect(initPlayerConnections)
    for _, player in ipairs(Players:GetPlayers()) do
        initPlayerConnections(player)
    end
end

-- Handle game script based on the current game ID
local place_id = game.PlaceId
if GAME_SCRIPTS[place_id] then
    local supported, scriptOrError = loadGameScript(GAME_SCRIPTS[place_id])
    if supported then
        local success, result = pcall(scriptOrError)
        if not success then
            warn("Error running the game script:", result)
        end
    else
        warn("Game script loading failed.")
    end
else
    print("Game ID is not supported:", place_id)
    print("Loading default script.")
    -- Assume there is a default script in the links table
    local defaultSupported, defaultScriptOrError = loadGameScript(links.Default)
    if defaultSupported then
        local success, result = pcall(defaultScriptOrError)
        if not success then
            warn("Error running the default script:", result)
        end
    else
        warn("Default script loading failed.")
    end
end
